---
title: "Data flow"
---

# A. Moi script flow

Objective:

* Removal of data kept at minimum and delayed as much as possible
  * Cons: The process will take longer time
  * Pros: Dynamic explortion to test thing other than just the ICES datacall
* Only create sf-object once, because it is expensive
  * Hence ICES area, eusm and depth categorization all done in the same sweep

## Logbooks

The Icelandic landings system does not keep track of trips in the sense of departure and arrival date and port. During trips captain logbooks recording on supposedly activity of each setting during is recorded (start end time, positions and catch composition). At entry to harbour a separate statistics is collected by the Directorate of Fisheries, focusing on the total trip catch composition only.

## AIS data

Orignal data are hive-partioned parquet file. For each year:

* Import STK and ASTD and bind
* Generate sf-object
* Allocate each ping to port, ices area, depth, eusm, ...
* Create coodinates for CRS whatever and then drop geometry (forever after)
* Remove points on (Ice)land
* Create unique trip id per vessel per year, negative in if in harbour
* For each ping assign departure and arrival harbour
* Distinct vessel-time
* Filter out "distant" points
* Derive and label whacky speed (not removed yet)
  * whacky speed kept for downstream diagnostics
* For each trip (whacks kept aside), calculate step time and distance as well as cumulative metrics
* Join with logbooks using `by = join_by(vid, between(time, t1, t2))`
  * time is ais position time
  * t1 and t2 are start and end of fishing operation as recorded in the logbooks. If t1 and/or t2 were not reported, used start and end time of day.
  * Additional parameters that come with the logbooks:
    * total catch
    * vessel length
    * vessel kw
* Create a trip gear (gid_trip) for the trip (almost all trips of the Icelandic fleet are single gear)
  * *This is so that in downstream process one can select e.g. all bottom trawl trip points, both fishing and non-fishing*
* Join with gear lookup table - contains the ICES metier stuff as well as fishing speed criterions for each (s1 and s2)
* Save as hive-partitioned parquet files:

```{r}
library(tidyverse)
fs::dir_tree(here::here("data/ais/trail"))
```

A glimpse at the dataset:

```{r}
duckdbfs::open_dataset(here::here("data/ais/trail")) |> glimpse()
```

All stuff still done reading data into R memory (hence the year loop) - objective is to utilize duckdb in the future (then no year loop).




# B. ICES datacall script

## 1. Preprocessing

The ICES datacall assumes that the starting point is:

```
**TACSAT2 Format**

| **Type** | **Variable**          | **Code** | **Description**          |
|----------|-----------------------|----------|--------------------------|
| Vessel   | Vessel ID             | VE_REF   | 20-character text string |
| Sighting | Latitude              | SI_LATI  | Decimal degrees          |
|          | Longitude             | SI_LONG  | Decimal degrees          |
|          | Date                  | SI_DATE  | DD/MM/YYYY               |
|          | Time                  | SI_TIME  | HH:MM (UTC)              |
|          | Instantaneous speed   | SI_SP    | Knots                    |
|          | Instantaneous heading | SI_HE    | Degrees                  |

**EFLALO2 Format**

| Type          | Variable                                                    | Code             | Format/Unit                                     |
|---------------|-------------------------------------------------------------|------------------|-------------------------------------------------|
| Vessel        | Vessel ID                                                   | VE_REF           | 20 character string                             |
|               | Fleet                                                       | VE_FLT           | DCF regulation                                  |
|               | Home country                                                | VE_COU           | ISO 3166 – 1 alpha-3 codes.                     |
|               | Vessel length                                               | VE_LEN           | Oal (m)                                         |
|               | Vessel power                                                | VE_KW            | kW                                              |
|               | Tonnage                                                     | VE_TON           | GT *(optional)*                                 |
| Fishing trip  | Fishing trip reference number                               | FT_REF           | 20 character string                             |
|               | Departure country                                           | FT_DCOU          | ISO 3166 – 1 alpha-3 codes.                     |
|               | Departure harbour                                           | FT_DHAR          | International harbour codes. (UN LOCODE)        |
|               | Departure date                                              | FT_DDAT          | DD/MM/YYYY                                      |
|               | Departure time                                              | FT_DTIME         | HH:MM                                           |
|               | Landing country                                             | FT_LCOU          | ISO 3166 – 1 alpha-3 codes.                     |
|               | Landing harbour                                             | FT_LHAR          | International harbour codes. (UN LOCODE)        |
|               | Arrival date                                                | FT_LDAT          | DD/MM/YYYY                                      |
|               | Arrival time                                                | FT_LTIME         | HH:MM                                           |
| Log event     | Log event ID                                                | LE_ID            | 25 character string FT_REF_number (1,2,3,etc.)  |
|               |                                                             |                  |                                                 |
|               | Catch date                                                  | LE_CDAT          | DD/MM/YYYY                                      |
|               | Log event start time                                        | LE_STIME         | HH:MM *(Optional)*                              |
|               | Log event end time                                          | LE_ETIME         | HH:MM *(Optional)*                              |
|               | Log event start position latitude                           | LE_SLAT          | Decimal degrees *(Optional)*                    |
|               | Log event start position longitude                          | LE_SLON          | Decimal degrees *(Optional)*                    |
|               | Log event end position latitude                             | LE_ELAT          | Decimal degrees *(Optional)*                    |
|               | Log event end position longitude                            | LE_ELON          | Decimal degrees *(Optional)*                    |
|               | Gear                                                        | LE_GEAR          | 3 character string. DCF metiér level 4          |
|               | Mesh size                                                   | LE_MSZ           | mm stretched mesh                               |
|               | ICES rectangle                                              | LE_RECT          | 37F5, NA=unallocated                            |
|               | ICES division                                               | LE_DIV           | 10 character string (see codes in annex 1)      |
|               | Fishing activity (métier)                                   | LE_MET           | Filled in as output from Lot2 tool              |
|               | Landing weight estimate of species SP1 (FAO species codes)  | LE_KG_\<SP1\>    | Kg                                              |
|               | Landing value of species SP1 (FAO species codes)            | LE_EURO_\<SP1\>  | EURO                                            |
|               | Landing weight estimate of species SPn (FAO species codes)  | LE_KG_\<SPn\>    | Kg                                              |
|               | Landing value of species SPn (FAO species codes)            | LE_EURO_\<SPn\>  | EURO                                            |
```
More importantly the final dataproduct to be uploaded is of the following format:

**Format Specification for Logbook Data (LE)**:

```
| Field               | Type         | Required | Description                                                |
|---------------------|--------------|----------|------------------------------------------------------------|
| RecordType          | char(2)      | Yes      | "LE" for logbook records                                   |
| CountryCode         | char(3)      | Yes      | ISO 3166-1 alpha-3 code                                    |
| Year                | char(4)      | Yes      | Year of data                                               |
| Month               | int(2)       | Yes      | Month of data                                              |
| NoDistinctVessels   | int(5)       | Yes      | Number of distinct vessels                                 |
| AnonymizedVesselID  | nvarchar(500)| Yes      | Anonymised vessel IDs (e.g., "ESP001;ESP003")              |
| ICESrectangle       | char(4)      | Yes      | ICES statistical rectangle                                 |
| MetierL4            | char(25)     | Yes      | Gear type level 4                                          |
| MetierL5            | char(50)     | Yes      | Target assemblage                                          |
| MetierL6            | char(40)     | Yes      | Metier level 6                                             |
| VesselLengthRange   | char(20)     | Yes      | Vessel length class                                        |
| VMSEnabled          | char         | No       | Whether vessel has VMS ("Y"/"N")                           |
| FishingDays         | float(15)    | Yes      | Number of fishing days                                     |
| kWFishingDays       | float(15)    | No       | kW × fishing days                                          |
| TotWeight           | float(15)    | Yes      | Total catch weight (kg)                                    |
| TotValue            | float(15)    | No       | Total catch value (EUR)                                    |
```

Comments:

* AnonymizedVesselID: This done at the aggregation stage via grouping of RecordType, CountryCode, Year, Month, ICESrectangle, MetierL4, MetierL5, MetierL6, VesselLengthRange, VMSEnabled with the following coding `AnonymizedVesselID = ifelse(n_distinct(VE_ID) < 3, paste(unique(VE_ID), collapse = ";"), 'not_required')`
* MetierL5: This is actually species target acronym, because in test the following is used: `icesVocab::getCodeList("TargetAssemblage")`
  * The variable name is confusing because we also have `icesVocab::getCodeList("Metier5_FishingActivity")`
* FishingDays: At the lowest level (i.e. prior to aggregation) this value is the inverse of the number of records per day
  * E.g. if three settings are reported within a day, each setting accounts for 1/3 fishing days
  * In the codeflow this is derived by taking the inverse of the count within a grouping of VE_COU, VE_REF, LE_CDAT. The variable name is confusingly called "INTV" in the script but should really just be called fishing_days (nothing wrong with 1/3 fishing days).
* kWFishingDays: At the lowest level (i.e. prior to aggregation) this is the inverse of the number of records per day (see above) multiplied by the vessels engine size (kilowatts).


**AIS/VMS data**

```
| Field                | Type         | Required | Description                                                |
|----------------------|--------------|----------|------------------------------------------------------------|
| RecordType           | char(2)      | Yes      | "VE" for VMS records                                       |
| CountryCode          | char(3)      | Yes      | ISO 3166-1 alpha-3 code                                    |
| Year                 | char(4)      | Yes      | Year of data                                               |
| Month                | int(2)       | Yes      | Month of data                                              |
| NoDistinctVessels    | int(5)       | Yes      | Number of distinct vessels                                 |
| AnonymizedVesselID   | nvarchar(500)| Yes      | Anonymised vessel IDs (e.g., "ESP001;ESP003")              |
| Csquare              | nvarchar(15) | Yes      | C-square reference (0.05° × 0.05°)                         |
| MetierL4             | char(25)     | Yes      | Gear type level 4                                          |
| MetierL5             | char(50)     | Yes      | Target assemblage                                          |
| MetierL6             | char(40)     | Yes      | Metier level 6                                             |
| VesselLengthRange    | char(20)     | Yes      | Vessel length class                                        |
| Habitat              | nvarchar     | No       | MSFD Habitat type                                          |
| Depth                | nvarchar     | No       | Depth range                                                |
| No_Records           | int          | Yes      | Number of VMS records                                      |
| AverageFishingSpeed  | float(15)    | Yes      | Average speed during fishing (knots)                       |
| FishingHour          | float(15)    | Yes      | Fishing hours                                              |
| AverageInterval      | float(10)    | Yes      | Average polling interval (minutes)                         |
| AverageVesselLength  | float(15)    | Yes      | Average vessel length (m)                                  |
| AveragekW            | float(15)    | Yes      | Average engine power (kW)                                  |
| kWFishingHour        | float(15)    | Yes      | kW × fishing hours                                         |
| SweptArea            | float        | No       | Swept area (km²)                                           |
| TotWeight            | float(15)    | Yes      | Total catch weight (kg)                                    |
| TotValue             | float(15)    | No       | Total catch value (EUR)                                    |
| AverageGearWidth     | float(15)    | Yes      | Average gear width (km)                                    |
```

Comments:

* AnonymizedVesselID: This done at the aggregation stage via grouping of RecordType, CountryCode, Year, Month, Csquare, MetierL4, MetierL5, MetierL6, VesselLengthRange, Habitat and Depth with the following coding `AnonymizedVesselID = ifelse(n_distinct(VE_ID) < 3, paste(unique(VE_ID), collapse = ";"), 'not_required')
* MetierL5: See above
* SweptArea: 

### AIS/VMS

* Remove VMS pings outside the ICES areas (1.2.1)
  * *The provided shapefile cuts off some fishing pings close to Icelandic shore*
  * **Done in step 01, but only if not on Iceland**
* Remove duplicate records (1.2.2)
  * Data order can matter
  * **Done in step 04**
* Remove points that have impossible coordinates (1.2.3)
  * Kind of reduntant because of 1.2.1
* Remove points which are pseudo duplicates as they have an interval rate < x minutes (1.2.4)
  * **IS: Not done**
* Remove points in harbour (1.2.5)
  * **IS: Harbour id is labelled in step 01**
  * **IS: Trip id is generated in step 03, has positive number if outside harbour**

### Logbooks

* Warn for outlying catch records (1.3.2)
* Remove non-unique trip numbers (1.3.3)
  * **IS: Do not use trip number concept, only landings id**
* Remove impossible time stamp records (1.3.4)
* Remove trip starting before 1st Jan (1.3.5)
  * If not processing data by year, this is not needed
* Remove records with arrival date before departure date (1.3.6)
  * It matters how this is done
* Remove trip with overlap with another trip (1.3.7)
* Check Metier L4 (Gear) categories are accepted (1.4.1)
* Check Metier L6 (Fishing Activity) categories are accepted (3.5.5)


## 2. Analysis

* Assign EFLALO Fishing trip information (gear, vessel, length, etc. ) to VMS records in TACSAT (2.2)
  * Assign EFLALO Fishing Trip identifiers to TACSAT records (2.2.1)
    * Assign Fishing Trip and Vessel Details at Trip Level (2.2.2.1)
    * Assign to TACSAT the Fishing Trips using more than one gear and fishing in several ICES Rectangles (2.2.2.2)
* Define TACSAT - Fishing Effort and  Activity status (2.3)
  * Calculate time interval between points (2.3.1)
  * Remove TACSAT points with no values (NA) in them in ESSENTIAL VMS ATTRIBUTES (2.3.2)
    * *Should this not be before step 2.3.1*
  * Define TACSAT record vessel location Fishing Status ( Fishing or Steaming) (2.3.3)
    * Define speed thresholds associated with fishing for gears (2.3.3.1)
  * Remove the records with invalid METIER LEVEL 6 codes(2.3.4)
    * *Should this not by done in the pre-processing step*
* Dispatch EFLALO landings at VMS position scale (SplitAmongPing) (2.4)
  * Creates EFLALO LE_KG_TOT and LE_EURO_TO if not created yet (2.4.1)
  * Retain EFLALO/LB records with related TACSAT/VMS records in EFLALOM (Eflalo Merged) (2.4.2)
  * Filter the TACSAT records identified as vessel positions engaged in Fishing Operations (2.4.3)
  * Filter TACSAT records which SI_STATE is not NA (2.4.4)
    * *Does this screw up interval calculations?*
  * Distribute landings among pings (2.4.5)
* Add additional information to tacsatEflalo (2.5)
  * Add Habitat and Bathymetry data values to TACSATEFLALO (2.5.1)
  * Calculate the C-SQUARE by TACSAT record based on longitude and latitude of VMS data (2.5.2)
  * Extract the year and month from the date-time (2.5.3)
  * Calculate the kilowatt-hour and convert interval to hours (2.5.4)
  * Calculated gear width to each fishing point (2.5.5)
  * Calculates Swept Area (Km2) for each record in the TACSATEFLALO (2.5.6)

# 