---
title: "Af fótspori fiskibotnvörpu"
---

## Techinicalities

* This document show only limited maps
* Makes links to more detail maps
* Unless one solves linking shiny into document

## Fororð

Fiskibotnvörpuveiðar hafa lengi verið umdeildar og hefur sú ... magnast með tíma.
Stjórnvöld hafa á síðari tímum ... egosystem based approach to fisherise
...

Hér er gerð tilraun til að skoða umfang fiskibotnvörpuveið í Íslenskri lögsögu síðustu xxx ár

## Gögnin

Í þessum stúf er fótspor fiskibotnvörpu á Íslandsmiðum skoðuð. Gögnin sem eru notuð eru eftirfarandi:

* Sjálvirk tilkynningaskylda skipa
* Gögn frá Vegagerðinni frá árunum 2008 til 2024 sem innihalda tíma, staðsetningu (lengd og breiddargráðu), hraða og stefnu allra skipa innan Íslenskrar lögsögu
* Gögn frá PAME frá árunum YYYYY til 2024 sem innihalda tíma og staðsetningu 

## Annmarkar

* ... consider this a 1st go, the devil in the detail can be sorted out later

## Núverandi svæði þar sem fiskibotnvarpa er bönnuð allt árið

* Landhelgin og skipaflokkalögin
* OECM
* Kórall
* Annað
* ...

Setja í samhengi við heildarlögsögu og svo dýpissvið

## Núverandi fótspor

* Flatarmál per ár
* Flatarmál yfir allt tímabilið
* Flatarmál í samaburði við EEZ og dýptarsvið
* ...

## Hugleiðingar um takmarkanir á veiðisvæðum

### Út frá heildarafla

### Að teknu tilliti til tegunda

### Að teknu tillit til einstakra skipa

### Að teknu tilliti til ársfjórðunga

...

```{r}
library(tidyverse)
library(arrow)
library(duckdb)
library(leaflet)
library(leafem)
library(stars)
library(terra)

# map resolution in degrees
dx <- 0.02
dy <- dx / 2   # grid resolution approximately 275 x 275 meters
rb_cap <- function(x, Q = 0.975) {
  q = quantile(x, Q)
  ifelse(x > q, q, x)
}


ais <- 
  open_dataset("/home/haf/einarhj/stasi/fishydata/data//ais/trail") |> 
  # Not in harbour
  filter(.cid > 0,                            # .cid positive -> not in harbour
         (whack == FALSE | is.na(whack)),   # need to fix this
         between(lon, -30, -10),
         between(lat, 62, 68.5),
         between(year, 2008, 2024),
         between(speed, 2.625, 5.500),
         between(time, t1, t2),
         gid_trip == 6) |>                    # bottom trawl 
  select(.cid, vid, time, speed, lon, lat, t1, t2, agf_gid, gid_trip, dd, dt, .sid)
# catch
catch <- open_dataset("/home/haf/einarhj/stasi/fishydata/data/logbooks/catch-for-ais.parquet")

# home made grid ----------------------------------------------------------
g <- 
  ais |> 
  inner_join(catch |> 
               # If a particular species
               # filter(sid == 6) |> 
               # be on the save side, probably not needed
               group_by(.sid) |> 
               summarise(catch = sum(catch, na.rm = TRUE))) |>
  filter(catch > 0) |> 
  group_by(.sid) |> 
  # split catch among pings
  mutate(catch = catch / n()) |> 
  ungroup() |> 
  mutate(x = lon %/% dx * dx + dx/2,
         y = lat %/% dy * dy + dy/2) |> 
  group_by(x, y) |> 
  summarise(n = n(),
            dt = sum(dt, na.rm = TRUE) / 60,
            catch = sum(catch, na.rm = TRUE),
            .groups = "drop") |> 
  collect() |> 
  filter(dt > 1) |>               # at least 1 minutes of effort per pixel
  arrange(catch) |> 
  mutate(pcatch = catch / sum(catch),
         ccatch = cumsum(pcatch) * 100)

library(terra)
r <- 
  g |> 
  select(x, y, z = ccatch) |> 
  #mutate(z = santoku::chop_deciles(z)) |> 
  #select(x, y, z = catch) |> 
  #mutate(z = rb_cap(z, 0.95)) |> 
  # should go directly to stars object
  rast(type = "xyz",
       crs = "epsg:4326")
s <- r |> st_as_stars()
sf <- 
  s |> 
  st_as_sf() |> 
  mutate(z = case_when(z < 5 ~ "000-005",
                       z < 10 ~ "005-010",
                       z < 15 ~ "010-015",
                       z < 20 ~ "015-020",
                       z < 25 ~ "020-025",
                       z < 50 ~ "025-050",
                       z < 75 ~ "050-075",
                       z <= 100 ~ "075-100",
                       .default = "something else"))
sf2 <- 
  sf |> 
  group_by(z) |>  
  summarize(geometry = st_union(geometry))
area <- 
  sf2 |> 
  mutate(area = st_area(geometry) |> as.numeric(),
         area = area / 1e6) |> 
  st_drop_geometry() |> 
  mutate(p = area / sum(area),
         cp = cumsum(p))

library(leaflet)
m <- 
  leaflet() |> 
  addTiles() |> 
  addTiles(urlTemplate = "https://heima.hafro.is/~einarhj/tiles/haf/050m/{z}/{x}/{-y}.png",
             group = "050m",
             options = tileOptions(minZoom = 5, maxZoom = 16)) |>
    addTiles(urlTemplate = "https://heima.hafro.is/~einarhj/tiles/haf/020m/{z}/{x}/{-y}.png",
             group = "020m",
             options = tileOptions(minZoom = 5, maxZoom = 16)) |>
    addTiles(urlTemplate = "https://heima.hafro.is/~einarhj/tiles/lhg/{z}/{x}/{-y}.png",
             group = "lhg",
             options = tileOptions(minZoom = 0, maxZoom = 16))
pal <- viridis::inferno(nrow(sf2), direction = -1)
m2 <- m


for(i in 1:nrow(sf2)) {
  Z <- sf2$z[i]
  tmp <- sf2 |> filter(z == Z)
  m2 <- 
    m2 |> 
    addPolygons(data = tmp,
               group = Z,
               col = pal[i],
               fillOpacity = 1,
               opacity = 1,
               weight = 1)
}
m2 |> 
  addLayersControl(overlayGroups = sf2$z,
                     options = layersControlOptions(collapsed = FALSE))


sf2 |> write_sf("/u3/haf/gisland/data/adhoc/2025-06-10_fishtrawl_proportion_of_catch.gpkg")







plot(r)
library(tmap)
tmap_mode("view")
#values(r) <- log(values(r))  # just to get some contrast in the map

tm_shape(s) +
  tm_raster("z",
            palette = "-inferno")
library(leaflet)
m <- 
  leaflet() |> 
  addTiles() |> 
  addRasterImage(x = r, maxBytes = 5432365) 
m


library(viridis)








library(mapdeck)
mapdeck::mapdeck() |> add_polygon(data = sf2)
library(mapview)
res <- list()
for(i in 1:nrow(sf2)) {
  res[[i]] <-
    sf2 |> 
    slice(i)
}
names(res) <- sf2$z
m <- mapview(sf2) +  mapview(res, alpha.regions = 1, lwd = 0)
m
l <- m@map
l |> 
    #leaflet::addPolylines(data = z400, opacity = 1, fillOpacity = 1, weight = 1) |> 
    # leaflet::addPolylines(data = z300, opacity = 1, fillOpacity = 1, weight = 1) |> 
    # leaflet::addPolylines(data = z200, opacity = 1, fillOpacity = 1, weight = 1) |>
    #leaflet::addPolylines(data = z150, opacity = 1, fillOpacity = 1, weight = 1) |>
    #leaflet::addPolylines(data = z100, opacity = 1, fillOpacity = 1, weight = 1) |>
    #leaflet::addPolylines(data = z075, opacity = 1, fillOpacity = 1, weight = 1) |>
    addTiles(urlTemplate = "https://heima.hafro.is/~einarhj/tiles/haf/050m/{z}/{x}/{-y}.png",
             group = "050m",
             options = tileOptions(minZoom = 5, maxZoom = 16)) |>
    addTiles(urlTemplate = "https://heima.hafro.is/~einarhj/tiles/haf/020m/{z}/{x}/{-y}.png",
             group = "020m",
             options = tileOptions(minZoom = 5, maxZoom = 16)) |>
    addTiles(urlTemplate = "https://heima.hafro.is/~einarhj/tiles/lhg/{z}/{x}/{-y}.png",
             group = "lhg",
             options = tileOptions(minZoom = 0, maxZoom = 16))


# coult think here about getting rid of areas less than x
sf2 |> 
  mutate(area = st_area(geometry)) |> 
  st_drop_geometry() |> 
  mutate(area = as.numeric(area),
         area = area / 1e6,
         p = area / sum(area),
         cp = cumsum(p),
         cp_inv = 1 - cp)




for(i in 1:nrow(sf2)) {
  Z <- sf2$z[i]
  tmp <- sf2 |> filter(z == Z)
  m |> 
    addPolygons(data = tmp,
               group = Z,
               col = "white",
               fillOpacity = 1,
               opacity = 1,
               weight = 1)
}






s <- 
  r |> 
  st_as_stars() |> 
  mutate(z2 = santoku::chop_deciles(z))
library(leaflet)
library(leafem)
library(stars)
library(tmap)
# library(tmap.mapgl)
tmap_mode("view")
values(r) <- log(values(r))  # just to get some contrast in the map
s <- r |> st_as_stars()
tm_shape(s) +
  tm_raster("z2",
            palette = "-inferno")

s <- 
  r |> 
  st_as_stars() |> 
  mutate(z2 = santoku::chop(z, breaks = c(0, 10, 25, 50)))
tm_shape(s) +
  tm_raster("z2",
            palette = "-inferno")
tm_shape(s) +
  tm_raster("z2")
```
